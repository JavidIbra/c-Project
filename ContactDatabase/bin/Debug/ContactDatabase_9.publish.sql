/*
Deployment script for ContactHome

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ContactHome"
:setvar DefaultFilePrefix "ContactHome"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[DF__Brands__CreateDa__47DBAE45]...';


GO
ALTER TABLE [dbo].[Brands] DROP CONSTRAINT [DF__Brands__CreateDa__47DBAE45];


GO
PRINT N'Dropping [dbo].[DF__Models__CreateDa__48CFD27E]...';


GO
ALTER TABLE [dbo].[Models] DROP CONSTRAINT [DF__Models__CreateDa__48CFD27E];


GO
PRINT N'Dropping [dbo].[DF__Product__CreateD__3C69FB99]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF__Product__CreateD__3C69FB99];


GO
PRINT N'Dropping [dbo].[FK_Product_Models]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [FK_Product_Models];


GO
PRINT N'Dropping [dbo].[FK_Brands_Models]...';


GO
ALTER TABLE [dbo].[Brands] DROP CONSTRAINT [FK_Brands_Models];


GO
PRINT N'Dropping [dbo].[FK_Product_SubCategory]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [FK_Product_SubCategory];


GO
PRINT N'Dropping [dbo].[FK_SubCategory_Category]...';


GO
ALTER TABLE [dbo].[SubCategory] DROP CONSTRAINT [FK_SubCategory_Category];


GO
PRINT N'Starting rebuilding table [dbo].[Product]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Product] (
    [Id]            INT           IDENTITY (1, 1) NOT NULL,
    [Name]          NVARCHAR (50) NOT NULL,
    [ModelId]       INT           NULL,
    [SubCategoryId] INT           NULL,
    [CreateDate]    DATETIME      DEFAULT getdate() NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Product])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Product] ([Id], [Name], [ModelId], [SubCategoryId], [CreateDate])
        SELECT   [Id],
                 [Name],
                 [ModelId],
                 [SubCategoryId],
                 [CreateDate]
        FROM     [dbo].[Product]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] OFF;
    END

DROP TABLE [dbo].[Product];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Product]', N'Product';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Brands]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Brands] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (50) NOT NULL,
    [ModelId]      INT           NULL,
    [CreateUserId] INT           NOT NULL,
    [CreateDate]   DATETIME      DEFAULT getDate() NOT NULL,
    [DeleteDate]   DATETIME      NULL,
    [DeleteId]     DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Brands])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Brands] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Brands] ([Id], [Name], [ModelId], [CreateUserId], [CreateDate], [DeleteDate], [DeleteId])
        SELECT   [Id],
                 [Name],
                 [ModelId],
                 [CreateUserId],
                 [CreateDate],
                 [DeleteDate],
                 [DeleteId]
        FROM     [dbo].[Brands]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Brands] OFF;
    END

DROP TABLE [dbo].[Brands];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Brands]', N'Brands';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Models]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Models] (
    [Id]           INT           IDENTITY (1, 1) NOT NULL,
    [Name]         NVARCHAR (50) NOT NULL,
    [CreateUserId] INT           NOT NULL,
    [CreateDate]   DATETIME      DEFAULT getDate() NOT NULL,
    [DeleteDate]   DATETIME      NULL,
    [DeleteId]     DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Models])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Models] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Models] ([Id], [Name], [CreateUserId], [CreateDate], [DeleteDate], [DeleteId])
        SELECT   [Id],
                 [Name],
                 [CreateUserId],
                 [CreateDate],
                 [DeleteDate],
                 [DeleteId]
        FROM     [dbo].[Models]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Models] OFF;
    END

DROP TABLE [dbo].[Models];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Models]', N'Models';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
if not exists (select top(1) 0 from Roles)
begin
insert into [dbo].[Roles]([Name],[CreateUserId])
values(N'Adminstrator',1),(N'User',1)
end

if not exists (select top(1) 0 from Genders)
begin
insert into [dbo].[Genders]([Name],[CreateUserId])
values(N'Kişi',1),(N'Qadın',1)
end

if not exists (select top(1) 0 from Users)
begin
insert into [dbo].[Users]([Email],[Name],[Surname],[GenderId],[RoleId],[ActivationKey],[ActivateDate],[CreateUserId])
values(N'admin@mail.ru','Admin','Filankesov',1,1,replace(newid(),'-',''),getdate(),1)
end
GO

GO
PRINT N'Update complete.';


GO
